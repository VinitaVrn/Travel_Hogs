{"ast":null,"code":"var _jsxFileName = \"C:\\\\Masai\\\\Travel Project\\\\myAddition\\\\src\\\\TravelPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Box, Button, VStack, HStack, Input, IconButton, Text, Alert, AlertIcon, StackDivider, Image, Textarea, Select } from \"@chakra-ui/react\";\nimport { FaTimes, FaWalking, FaCar, FaBus, FaMapMarkerAlt } from \"react-icons/fa\";\nimport { useJsApiLoader, GoogleMap, Marker, InfoWindow, DirectionsRenderer, Autocomplete } from \"@react-google-maps/api\";\nimport { appCheck } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TravelPlanner = ({\n  googleMapsApiKey\n}) => {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey,\n    libraries: [\"places\"]\n  });\n  const [map, setMap] = useState(null);\n  const [mapCenter, setMapCenter] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [itineraries, setItineraries] = useState({});\n  const originRef = useRef();\n  const destinationRef = useRef();\n  const [travelMode, setTravelMode] = useState(\"DRIVING\");\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(Text, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  async function calculateRoute() {\n    if (!originRef.current.value || !destinationRef.current.value) {\n      setError(\"Please enter both origin and destination.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const directionsService = new window.google.maps.DirectionsService();\n      const results = await directionsService.route({\n        origin: originRef.current.value,\n        destination: destinationRef.current.value,\n        travelMode: window.google.maps.TravelMode[travelMode]\n      });\n      setDirectionsResponse(results);\n      setDistance(results.routes[0].legs[0].distance.text);\n      setDuration(results.routes[0].legs[0].duration.text);\n      setError(null);\n\n      // Center the map on the route\n      const bounds = new window.google.maps.LatLngBounds();\n      results.routes[0].overview_path.forEach(p => {\n        bounds.extend(p);\n      });\n      map.fitBounds(bounds);\n    } catch (error) {\n      setError(\"Error calculating route: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  function clearRoute() {\n    setDirectionsResponse(null);\n    setDistance(\"\");\n    setDuration(\"\");\n    originRef.current.value = \"\";\n    destinationRef.current.value = \"\";\n    setError(null);\n    setPlaces([]);\n    setSelectedPlace(null);\n    setItineraries({});\n  }\n  async function findNearbyPlaces() {\n    if (!map) {\n      setError(\"Map is not initialized.\");\n      return;\n    }\n    setLoading(true);\n    const service = new window.google.maps.places.PlacesService(map);\n    const center = map.getCenter();\n    const request = {\n      location: center,\n      radius: 2000,\n      type: [\"restaurant\", \"cafe\", \"tourist_attraction\"]\n    };\n    try {\n      const token = await appCheck.getToken();\n      console.log(\"App Check Token:\", token);\n      service.nearbySearch(request, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n          setPlaces(results.slice(0, 5));\n          setError(null);\n        } else {\n          setError(\"No nearby places found.\");\n        }\n      });\n    } catch (error) {\n      setError(\"An error occurred while fetching nearby places.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  function handlePlaceSelection(event) {\n    const selected = places.find(place => place.place_id === event.target.value);\n    setSelectedPlace(selected);\n    if (map && selected) {\n      map.panTo(selected.geometry.location);\n    }\n  }\n  function handleItineraryChange(event, placeId) {\n    setItineraries({\n      ...itineraries,\n      [placeId]: event.target.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(HStack, {\n    spacing: 4,\n    align: \"start\",\n    h: \"100vh\",\n    w: \"100vw\",\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      p: 4,\n      borderRadius: \"lg\",\n      bg: \"white\",\n      shadow: \"md\",\n      spacing: 4,\n      w: {\n        base: \"full\",\n        md: \"400px\"\n      },\n      align: \"stretch\",\n      overflowY: \"auto\",\n      divider: /*#__PURE__*/_jsxDEV(StackDivider, {\n        borderColor: \"gray.200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 18\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Origin\",\n            ref: originRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Destination\",\n            ref: destinationRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(FaWalking, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 23\n          }, this),\n          onClick: () => setTravelMode(\"WALKING\"),\n          colorScheme: travelMode === \"WALKING\" ? \"blue\" : \"gray\",\n          children: \"Walking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(FaCar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 23\n          }, this),\n          onClick: () => setTravelMode(\"DRIVING\"),\n          colorScheme: travelMode === \"DRIVING\" ? \"blue\" : \"gray\",\n          children: \"Car\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(FaBus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 23\n          }, this),\n          onClick: () => setTravelMode(\"TRANSIT\"),\n          colorScheme: travelMode === \"TRANSIT\" ? \"blue\" : \"gray\",\n          children: \"Public Transport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          onClick: calculateRoute,\n          isLoading: loading,\n          w: \"full\",\n          children: \"Start Journey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          icon: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this),\n          onClick: clearRoute,\n          colorScheme: \"red\",\n          \"aria-label\": \"Clear route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        fontWeight: \"bold\",\n        children: [\"Distance: \", distance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        fontWeight: \"bold\",\n        children: [\"Duration: \", duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        onClick: findNearbyPlaces,\n        isLoading: loading,\n        w: \"full\",\n        isDisabled: !directionsResponse,\n        children: \"Find Best Places Nearby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        status: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 3,\n        align: \"stretch\",\n        children: places.map((place, index) => /*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          shadow: \"xs\",\n          borderWidth: \"1px\",\n          borderRadius: \"md\",\n          onClick: () => setSelectedPlace(place),\n          _hover: {\n            bg: \"gray.100\",\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n              color: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"bold\",\n              children: place.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: place.vicinity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), places.length > 0 && /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a place\",\n        onChange: handlePlaceSelection,\n        value: selectedPlace ? selectedPlace.place_id : \"\",\n        children: places.map((place, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: place.place_id,\n          children: place.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), selectedPlace && /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        borderWidth: \"1px\",\n        borderRadius: \"md\",\n        shadow: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          mb: 2,\n          children: [\"Itinerary for \", selectedPlace.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Address: \", selectedPlace.vicinity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Rating: \", selectedPlace.rating || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Add your itinerary here...\",\n          value: itineraries[selectedPlace.place_id] || \"\",\n          onChange: event => handleItineraryChange(event, selectedPlace.place_id),\n          mt: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), selectedPlace.photos && selectedPlace.photos.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n          src: selectedPlace.photos[0].getUrl(),\n          alt: selectedPlace.name,\n          borderRadius: \"md\",\n          mt: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1\",\n      h: \"100%\",\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: mapCenter,\n        zoom: 15,\n        mapContainerStyle: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        options: {\n          streetViewControl: false,\n          fullscreenControl: false,\n          mapTypeControl: true,\n          mapTypeControlOptions: {\n            position: window.google.maps.ControlPosition.TOP_RIGHT\n          },\n          zoomControl: true,\n          zoomControlOptions: {\n            position: window.google.maps.ControlPosition.TOP_RIGHT\n          }\n        },\n        onLoad: mapInstance => setMap(mapInstance),\n        children: [directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), places.map((place, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: place.geometry.location,\n          onClick: () => setSelectedPlace(place),\n          children: selectedPlace && selectedPlace.place_id === place.place_id && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: place.geometry.location,\n            onCloseClick: () => setSelectedPlace(null),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                children: place.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: place.vicinity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(TravelPlanner, \"Xma+IlCFtGJApARMkkW7nVUYfWk=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = TravelPlanner;\nexport default TravelPlanner;\nvar _c;\n$RefreshReg$(_c, \"TravelPlanner\");","map":{"version":3,"names":["React","useState","useRef","Box","Button","VStack","HStack","Input","IconButton","Text","Alert","AlertIcon","StackDivider","Image","Textarea","Select","FaTimes","FaWalking","FaCar","FaBus","FaMapMarkerAlt","useJsApiLoader","GoogleMap","Marker","InfoWindow","DirectionsRenderer","Autocomplete","appCheck","jsxDEV","_jsxDEV","TravelPlanner","googleMapsApiKey","_s","isLoaded","libraries","map","setMap","mapCenter","setMapCenter","directionsResponse","setDirectionsResponse","distance","setDistance","duration","setDuration","places","setPlaces","loading","setLoading","error","setError","selectedPlace","setSelectedPlace","itineraries","setItineraries","originRef","destinationRef","travelMode","setTravelMode","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateRoute","current","value","directionsService","window","google","maps","DirectionsService","results","route","origin","destination","TravelMode","routes","legs","text","bounds","LatLngBounds","overview_path","forEach","p","extend","fitBounds","message","clearRoute","findNearbyPlaces","service","PlacesService","center","getCenter","request","location","radius","type","token","getToken","console","log","nearbySearch","status","PlacesServiceStatus","OK","slice","handlePlaceSelection","event","selected","find","place","place_id","target","panTo","geometry","handleItineraryChange","placeId","spacing","align","h","w","borderRadius","bg","shadow","base","md","overflowY","divider","borderColor","placeholder","ref","leftIcon","onClick","colorScheme","isLoading","icon","fontSize","fontWeight","isDisabled","index","borderWidth","_hover","cursor","color","name","vicinity","length","onChange","mb","rating","mt","photos","src","getUrl","alt","flex","position","zoom","mapContainerStyle","width","height","options","streetViewControl","fullscreenControl","mapTypeControl","mapTypeControlOptions","ControlPosition","TOP_RIGHT","zoomControl","zoomControlOptions","onLoad","mapInstance","directions","onCloseClick","_c","$RefreshReg$"],"sources":["C:/Masai/Travel Project/myAddition/src/TravelPlanner.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  VStack,\r\n  HStack,\r\n  Input,\r\n  IconButton,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  StackDivider,\r\n  Image,\r\n  Textarea,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  FaTimes,\r\n  FaWalking,\r\n  FaCar,\r\n  FaBus,\r\n  FaMapMarkerAlt,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  useJsApiLoader,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n  DirectionsRenderer,\r\n  Autocomplete,\r\n} from \"@react-google-maps/api\";\r\nimport { appCheck } from \"./firebase\";\r\n\r\nconst TravelPlanner = ({ googleMapsApiKey }) => {\r\n  const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey,\r\n    libraries: [\"places\"],\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState(null);\r\n  const [directionsResponse, setDirectionsResponse] = useState(null);\r\n  const [distance, setDistance] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n  const [places, setPlaces] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [itineraries, setItineraries] = useState({});\r\n  const originRef = useRef();\r\n  const destinationRef = useRef();\r\n  const [travelMode, setTravelMode] = useState(\"DRIVING\");\r\n\r\n  if (!isLoaded) return <Text>Loading...</Text>;\r\n\r\n  async function calculateRoute() {\r\n    if (!originRef.current.value || !destinationRef.current.value) {\r\n      setError(\"Please enter both origin and destination.\");\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      const results = await directionsService.route({\r\n        origin: originRef.current.value,\r\n        destination: destinationRef.current.value,\r\n        travelMode: window.google.maps.TravelMode[travelMode],\r\n      });\r\n      setDirectionsResponse(results);\r\n      setDistance(results.routes[0].legs[0].distance.text);\r\n      setDuration(results.routes[0].legs[0].duration.text);\r\n      setError(null);\r\n\r\n      // Center the map on the route\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      results.routes[0].overview_path.forEach((p) => {\r\n        bounds.extend(p);\r\n      });\r\n      map.fitBounds(bounds);\r\n    } catch (error) {\r\n      setError(\"Error calculating route: \" + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function clearRoute() {\r\n    setDirectionsResponse(null);\r\n    setDistance(\"\");\r\n    setDuration(\"\");\r\n    originRef.current.value = \"\";\r\n    destinationRef.current.value = \"\";\r\n    setError(null);\r\n    setPlaces([]);\r\n    setSelectedPlace(null);\r\n    setItineraries({});\r\n  }\r\n\r\n  async function findNearbyPlaces() {\r\n    if (!map) {\r\n      setError(\"Map is not initialized.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const service = new window.google.maps.places.PlacesService(map);\r\n    const center = map.getCenter();\r\n    const request = {\r\n      location: center,\r\n      radius: 2000,\r\n      type: [\"restaurant\", \"cafe\", \"tourist_attraction\"],\r\n    };\r\n\r\n    try {\r\n      const token = await appCheck.getToken();\r\n      console.log(\"App Check Token:\", token);\r\n\r\n      service.nearbySearch(request, (results, status) => {\r\n        if (\r\n          status === window.google.maps.places.PlacesServiceStatus.OK &&\r\n          results\r\n        ) {\r\n          setPlaces(results.slice(0, 5));\r\n          setError(null);\r\n        } else {\r\n          setError(\"No nearby places found.\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      setError(\"An error occurred while fetching nearby places.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handlePlaceSelection(event) {\r\n    const selected = places.find(\r\n      (place) => place.place_id === event.target.value\r\n    );\r\n    setSelectedPlace(selected);\r\n    if (map && selected) {\r\n      map.panTo(selected.geometry.location);\r\n    }\r\n  }\r\n\r\n  function handleItineraryChange(event, placeId) {\r\n    setItineraries({\r\n      ...itineraries,\r\n      [placeId]: event.target.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <HStack spacing={4} align=\"start\" h=\"100vh\" w=\"100vw\">\r\n      <VStack\r\n        p={4}\r\n        borderRadius=\"lg\"\r\n        bg=\"white\"\r\n        shadow=\"md\"\r\n        spacing={4}\r\n        w={{ base: \"full\", md: \"400px\" }}\r\n        align=\"stretch\"\r\n        overflowY=\"auto\"\r\n        divider={<StackDivider borderColor=\"gray.200\" />}\r\n      >\r\n        <HStack spacing={3}>\r\n          <Autocomplete>\r\n            <Input placeholder=\"Origin\" ref={originRef} />\r\n          </Autocomplete>\r\n          <Autocomplete>\r\n            <Input placeholder=\"Destination\" ref={destinationRef} />\r\n          </Autocomplete>\r\n        </HStack>\r\n        <HStack spacing={3}>\r\n          <Button\r\n            leftIcon={<FaWalking />}\r\n            onClick={() => setTravelMode(\"WALKING\")}\r\n            colorScheme={travelMode === \"WALKING\" ? \"blue\" : \"gray\"}\r\n          >\r\n            Walking\r\n          </Button>\r\n          <Button\r\n            leftIcon={<FaCar />}\r\n            onClick={() => setTravelMode(\"DRIVING\")}\r\n            colorScheme={travelMode === \"DRIVING\" ? \"blue\" : \"gray\"}\r\n          >\r\n            Car\r\n          </Button>\r\n          <Button\r\n            leftIcon={<FaBus />}\r\n            onClick={() => setTravelMode(\"TRANSIT\")}\r\n            colorScheme={travelMode === \"TRANSIT\" ? \"blue\" : \"gray\"}\r\n          >\r\n            Public Transport\r\n          </Button>\r\n        </HStack>\r\n        <HStack spacing={3}>\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            onClick={calculateRoute}\r\n            isLoading={loading}\r\n            w=\"full\"\r\n          >\r\n            Start Journey\r\n          </Button>\r\n          <IconButton\r\n            icon={<FaTimes />}\r\n            onClick={clearRoute}\r\n            colorScheme=\"red\"\r\n            aria-label=\"Clear route\"\r\n          />\r\n        </HStack>\r\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n          Distance: {distance}\r\n        </Text>\r\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n          Duration: {duration}\r\n        </Text>\r\n        <Button\r\n          colorScheme=\"green\"\r\n          onClick={findNearbyPlaces}\r\n          isLoading={loading}\r\n          w=\"full\"\r\n          isDisabled={!directionsResponse}\r\n        >\r\n          Find Best Places Nearby\r\n        </Button>\r\n\r\n        {error && (\r\n          <Alert status=\"error\">\r\n            <AlertIcon />\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <VStack spacing={3} align=\"stretch\">\r\n          {places.map((place, index) => (\r\n            <Box\r\n              key={index}\r\n              p={2}\r\n              shadow=\"xs\"\r\n              borderWidth=\"1px\"\r\n              borderRadius=\"md\"\r\n              onClick={() => setSelectedPlace(place)}\r\n              _hover={{ bg: \"gray.100\", cursor: \"pointer\" }}\r\n            >\r\n              <HStack>\r\n                <FaMapMarkerAlt color=\"red\" />\r\n                <Text fontWeight=\"bold\">{place.name}</Text>\r\n              </HStack>\r\n              <Text>{place.vicinity}</Text>\r\n            </Box>\r\n          ))}\r\n        </VStack>\r\n\r\n        {places.length > 0 && (\r\n          <Select\r\n            placeholder=\"Select a place\"\r\n            onChange={handlePlaceSelection}\r\n            value={selectedPlace ? selectedPlace.place_id : \"\"}\r\n          >\r\n            {places.map((place, index) => (\r\n              <option key={index} value={place.place_id}>\r\n                {place.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        )}\r\n\r\n        {selectedPlace && (\r\n          <Box p={4} borderWidth=\"1px\" borderRadius=\"md\" shadow=\"sm\">\r\n            <Text fontWeight=\"bold\" mb={2}>\r\n              Itinerary for {selectedPlace.name}\r\n            </Text>\r\n            <Text>Address: {selectedPlace.vicinity}</Text>\r\n            <Text>Rating: {selectedPlace.rating || \"N/A\"}</Text>\r\n            <Textarea\r\n              placeholder=\"Add your itinerary here...\"\r\n              value={itineraries[selectedPlace.place_id] || \"\"}\r\n              onChange={(event) =>\r\n                handleItineraryChange(event, selectedPlace.place_id)\r\n              }\r\n              mt={3}\r\n            />\r\n            {selectedPlace.photos && selectedPlace.photos.length > 0 && (\r\n              <Image\r\n                src={selectedPlace.photos[0].getUrl()}\r\n                alt={selectedPlace.name}\r\n                borderRadius=\"md\"\r\n                mt={3}\r\n              />\r\n            )}\r\n          </Box>\r\n        )}\r\n      </VStack>\r\n\r\n      <Box flex=\"1\" h=\"100%\" position=\"relative\">\r\n        <GoogleMap\r\n          center={mapCenter}\r\n          zoom={15}\r\n          mapContainerStyle={{ width: \"100%\", height: \"100%\" }}\r\n          options={{\r\n            streetViewControl: false,\r\n            fullscreenControl: false,\r\n            mapTypeControl: true,\r\n            mapTypeControlOptions: {\r\n              position: window.google.maps.ControlPosition.TOP_RIGHT,\r\n            },\r\n            zoomControl: true,\r\n            zoomControlOptions: {\r\n              position: window.google.maps.ControlPosition.TOP_RIGHT,\r\n            },\r\n          }}\r\n          onLoad={(mapInstance) => setMap(mapInstance)}\r\n        >\r\n          {directionsResponse && (\r\n            <DirectionsRenderer directions={directionsResponse} />\r\n          )}\r\n          {places.map((place, index) => (\r\n            <Marker\r\n              key={index}\r\n              position={place.geometry.location}\r\n              onClick={() => setSelectedPlace(place)}\r\n            >\r\n              {selectedPlace && selectedPlace.place_id === place.place_id && (\r\n                <InfoWindow\r\n                  position={place.geometry.location}\r\n                  onCloseClick={() => setSelectedPlace(null)}\r\n                >\r\n                  <Box>\r\n                    <Text fontWeight=\"bold\">{place.name}</Text>\r\n                    <Text>{place.vicinity}</Text>\r\n                  </Box>\r\n                </InfoWindow>\r\n              )}\r\n            </Marker>\r\n          ))}\r\n        </GoogleMap>\r\n      </Box>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default TravelPlanner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SACEC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,UAAU,EACVC,IAAI,EACJC,KAAK,EACLC,SAAS,EACTC,YAAY,EACZC,KAAK,EACLC,QAAQ,EACRC,MAAM,QACD,kBAAkB;AACzB,SACEC,OAAO,EACPC,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,cAAc,QACT,gBAAgB;AACvB,SACEC,cAAc,EACdC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,kBAAkB,EAClBC,YAAY,QACP,wBAAwB;AAC/B,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC;EAAS,CAAC,GAAGZ,cAAc,CAAC;IAClCU,gBAAgB;IAChBG,SAAS,EAAE,CAAC,QAAQ;EACtB,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0C,QAAQ,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4C,MAAM,EAAEC,SAAS,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgD,KAAK,EAAEC,QAAQ,CAAC,GAAGjD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkD,aAAa,EAAEC,gBAAgB,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAMsD,SAAS,GAAGrD,MAAM,CAAC,CAAC;EAC1B,MAAMsD,cAAc,GAAGtD,MAAM,CAAC,CAAC;EAC/B,MAAM,CAACuD,UAAU,EAAEC,aAAa,CAAC,GAAGzD,QAAQ,CAAC,SAAS,CAAC;EAEvD,IAAI,CAACgC,QAAQ,EAAE,oBAAOJ,OAAA,CAACpB,IAAI;IAAAkD,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE7C,eAAeC,cAAcA,CAAA,EAAG;IAC9B,IAAI,CAACT,SAAS,CAACU,OAAO,CAACC,KAAK,IAAI,CAACV,cAAc,CAACS,OAAO,CAACC,KAAK,EAAE;MAC7DhB,QAAQ,CAAC,2CAA2C,CAAC;MACrD;IACF;IACA,IAAI;MACFF,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMmB,iBAAiB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACpE,MAAMC,OAAO,GAAG,MAAML,iBAAiB,CAACM,KAAK,CAAC;QAC5CC,MAAM,EAAEnB,SAAS,CAACU,OAAO,CAACC,KAAK;QAC/BS,WAAW,EAAEnB,cAAc,CAACS,OAAO,CAACC,KAAK;QACzCT,UAAU,EAAEW,MAAM,CAACC,MAAM,CAACC,IAAI,CAACM,UAAU,CAACnB,UAAU;MACtD,CAAC,CAAC;MACFjB,qBAAqB,CAACgC,OAAO,CAAC;MAC9B9B,WAAW,CAAC8B,OAAO,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACrC,QAAQ,CAACsC,IAAI,CAAC;MACpDnC,WAAW,CAAC4B,OAAO,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACnC,QAAQ,CAACoC,IAAI,CAAC;MACpD7B,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,MAAM8B,MAAM,GAAG,IAAIZ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACW,YAAY,CAAC,CAAC;MACpDT,OAAO,CAACK,MAAM,CAAC,CAAC,CAAC,CAACK,aAAa,CAACC,OAAO,CAAEC,CAAC,IAAK;QAC7CJ,MAAM,CAACK,MAAM,CAACD,CAAC,CAAC;MAClB,CAAC,CAAC;MACFjD,GAAG,CAACmD,SAAS,CAACN,MAAM,CAAC;IACvB,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdC,QAAQ,CAAC,2BAA2B,GAAGD,KAAK,CAACsC,OAAO,CAAC;IACvD,CAAC,SAAS;MACRvC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EAEA,SAASwC,UAAUA,CAAA,EAAG;IACpBhD,qBAAqB,CAAC,IAAI,CAAC;IAC3BE,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfW,SAAS,CAACU,OAAO,CAACC,KAAK,GAAG,EAAE;IAC5BV,cAAc,CAACS,OAAO,CAACC,KAAK,GAAG,EAAE;IACjChB,QAAQ,CAAC,IAAI,CAAC;IACdJ,SAAS,CAAC,EAAE,CAAC;IACbM,gBAAgB,CAAC,IAAI,CAAC;IACtBE,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB;EAEA,eAAemC,gBAAgBA,CAAA,EAAG;IAChC,IAAI,CAACtD,GAAG,EAAE;MACRe,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IACAF,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM0C,OAAO,GAAG,IAAItB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACzB,MAAM,CAAC8C,aAAa,CAACxD,GAAG,CAAC;IAChE,MAAMyD,MAAM,GAAGzD,GAAG,CAAC0D,SAAS,CAAC,CAAC;IAC9B,MAAMC,OAAO,GAAG;MACdC,QAAQ,EAAEH,MAAM;MAChBI,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,oBAAoB;IACnD,CAAC;IAED,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMvE,QAAQ,CAACwE,QAAQ,CAAC,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,KAAK,CAAC;MAEtCR,OAAO,CAACY,YAAY,CAACR,OAAO,EAAE,CAACtB,OAAO,EAAE+B,MAAM,KAAK;QACjD,IACEA,MAAM,KAAKnC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACzB,MAAM,CAAC2D,mBAAmB,CAACC,EAAE,IAC3DjC,OAAO,EACP;UACA1B,SAAS,CAAC0B,OAAO,CAACkC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC9BxD,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,MAAM;UACLA,QAAQ,CAAC,yBAAyB,CAAC;QACrC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,iDAAiD,CAAC;IAC7D,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EAEA,SAAS2D,oBAAoBA,CAACC,KAAK,EAAE;IACnC,MAAMC,QAAQ,GAAGhE,MAAM,CAACiE,IAAI,CACzBC,KAAK,IAAKA,KAAK,CAACC,QAAQ,KAAKJ,KAAK,CAACK,MAAM,CAAC/C,KAC7C,CAAC;IACDd,gBAAgB,CAACyD,QAAQ,CAAC;IAC1B,IAAI1E,GAAG,IAAI0E,QAAQ,EAAE;MACnB1E,GAAG,CAAC+E,KAAK,CAACL,QAAQ,CAACM,QAAQ,CAACpB,QAAQ,CAAC;IACvC;EACF;EAEA,SAASqB,qBAAqBA,CAACR,KAAK,EAAES,OAAO,EAAE;IAC7C/D,cAAc,CAAC;MACb,GAAGD,WAAW;MACd,CAACgE,OAAO,GAAGT,KAAK,CAACK,MAAM,CAAC/C;IAC1B,CAAC,CAAC;EACJ;EAEA,oBACErC,OAAA,CAACvB,MAAM;IAACgH,OAAO,EAAE,CAAE;IAACC,KAAK,EAAC,OAAO;IAACC,CAAC,EAAC,OAAO;IAACC,CAAC,EAAC,OAAO;IAAA9D,QAAA,gBACnD9B,OAAA,CAACxB,MAAM;MACL+E,CAAC,EAAE,CAAE;MACLsC,YAAY,EAAC,IAAI;MACjBC,EAAE,EAAC,OAAO;MACVC,MAAM,EAAC,IAAI;MACXN,OAAO,EAAE,CAAE;MACXG,CAAC,EAAE;QAAEI,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAQ,CAAE;MACjCP,KAAK,EAAC,SAAS;MACfQ,SAAS,EAAC,MAAM;MAChBC,OAAO,eAAEnG,OAAA,CAACjB,YAAY;QAACqH,WAAW,EAAC;MAAU;QAAArE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAJ,QAAA,gBAEjD9B,OAAA,CAACvB,MAAM;QAACgH,OAAO,EAAE,CAAE;QAAA3D,QAAA,gBACjB9B,OAAA,CAACH,YAAY;UAAAiC,QAAA,eACX9B,OAAA,CAACtB,KAAK;YAAC2H,WAAW,EAAC,QAAQ;YAACC,GAAG,EAAE5E;UAAU;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACflC,OAAA,CAACH,YAAY;UAAAiC,QAAA,eACX9B,OAAA,CAACtB,KAAK;YAAC2H,WAAW,EAAC,aAAa;YAACC,GAAG,EAAE3E;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACTlC,OAAA,CAACvB,MAAM;QAACgH,OAAO,EAAE,CAAE;QAAA3D,QAAA,gBACjB9B,OAAA,CAACzB,MAAM;UACLgI,QAAQ,eAAEvG,OAAA,CAACZ,SAAS;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACxBsE,OAAO,EAAEA,CAAA,KAAM3E,aAAa,CAAC,SAAS,CAAE;UACxC4E,WAAW,EAAE7E,UAAU,KAAK,SAAS,GAAG,MAAM,GAAG,MAAO;UAAAE,QAAA,EACzD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlC,OAAA,CAACzB,MAAM;UACLgI,QAAQ,eAAEvG,OAAA,CAACX,KAAK;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACpBsE,OAAO,EAAEA,CAAA,KAAM3E,aAAa,CAAC,SAAS,CAAE;UACxC4E,WAAW,EAAE7E,UAAU,KAAK,SAAS,GAAG,MAAM,GAAG,MAAO;UAAAE,QAAA,EACzD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlC,OAAA,CAACzB,MAAM;UACLgI,QAAQ,eAAEvG,OAAA,CAACV,KAAK;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACpBsE,OAAO,EAAEA,CAAA,KAAM3E,aAAa,CAAC,SAAS,CAAE;UACxC4E,WAAW,EAAE7E,UAAU,KAAK,SAAS,GAAG,MAAM,GAAG,MAAO;UAAAE,QAAA,EACzD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACTlC,OAAA,CAACvB,MAAM;QAACgH,OAAO,EAAE,CAAE;QAAA3D,QAAA,gBACjB9B,OAAA,CAACzB,MAAM;UACLkI,WAAW,EAAC,MAAM;UAClBD,OAAO,EAAErE,cAAe;UACxBuE,SAAS,EAAExF,OAAQ;UACnB0E,CAAC,EAAC,MAAM;UAAA9D,QAAA,EACT;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlC,OAAA,CAACrB,UAAU;UACTgI,IAAI,eAAE3G,OAAA,CAACb,OAAO;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAClBsE,OAAO,EAAE7C,UAAW;UACpB8C,WAAW,EAAC,KAAK;UACjB,cAAW;QAAa;UAAA1E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTlC,OAAA,CAACpB,IAAI;QAACgI,QAAQ,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAAA/E,QAAA,GAAC,YAC1B,EAAClB,QAAQ;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACPlC,OAAA,CAACpB,IAAI;QAACgI,QAAQ,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAAA/E,QAAA,GAAC,YAC1B,EAAChB,QAAQ;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACPlC,OAAA,CAACzB,MAAM;QACLkI,WAAW,EAAC,OAAO;QACnBD,OAAO,EAAE5C,gBAAiB;QAC1B8C,SAAS,EAAExF,OAAQ;QACnB0E,CAAC,EAAC,MAAM;QACRkB,UAAU,EAAE,CAACpG,kBAAmB;QAAAoB,QAAA,EACjC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERd,KAAK,iBACJpB,OAAA,CAACnB,KAAK;QAAC6F,MAAM,EAAC,OAAO;QAAA5C,QAAA,gBACnB9B,OAAA,CAAClB,SAAS;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACZd,KAAK;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,eAEDlC,OAAA,CAACxB,MAAM;QAACiH,OAAO,EAAE,CAAE;QAACC,KAAK,EAAC,SAAS;QAAA5D,QAAA,EAChCd,MAAM,CAACV,GAAG,CAAC,CAAC4E,KAAK,EAAE6B,KAAK,kBACvB/G,OAAA,CAAC1B,GAAG;UAEFiF,CAAC,EAAE,CAAE;UACLwC,MAAM,EAAC,IAAI;UACXiB,WAAW,EAAC,KAAK;UACjBnB,YAAY,EAAC,IAAI;UACjBW,OAAO,EAAEA,CAAA,KAAMjF,gBAAgB,CAAC2D,KAAK,CAAE;UACvC+B,MAAM,EAAE;YAAEnB,EAAE,EAAE,UAAU;YAAEoB,MAAM,EAAE;UAAU,CAAE;UAAApF,QAAA,gBAE9C9B,OAAA,CAACvB,MAAM;YAAAqD,QAAA,gBACL9B,OAAA,CAACT,cAAc;cAAC4H,KAAK,EAAC;YAAK;cAAApF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9BlC,OAAA,CAACpB,IAAI;cAACiI,UAAU,EAAC,MAAM;cAAA/E,QAAA,EAAEoD,KAAK,CAACkC;YAAI;cAAArF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACTlC,OAAA,CAACpB,IAAI;YAAAkD,QAAA,EAAEoD,KAAK,CAACmC;UAAQ;YAAAtF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAZxB6E,KAAK;UAAAhF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,EAERlB,MAAM,CAACsG,MAAM,GAAG,CAAC,iBAChBtH,OAAA,CAACd,MAAM;QACLmH,WAAW,EAAC,gBAAgB;QAC5BkB,QAAQ,EAAEzC,oBAAqB;QAC/BzC,KAAK,EAAEf,aAAa,GAAGA,aAAa,CAAC6D,QAAQ,GAAG,EAAG;QAAArD,QAAA,EAElDd,MAAM,CAACV,GAAG,CAAC,CAAC4E,KAAK,EAAE6B,KAAK,kBACvB/G,OAAA;UAAoBqC,KAAK,EAAE6C,KAAK,CAACC,QAAS;UAAArD,QAAA,EACvCoD,KAAK,CAACkC;QAAI,GADAL,KAAK;UAAAhF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACT,EAEAZ,aAAa,iBACZtB,OAAA,CAAC1B,GAAG;QAACiF,CAAC,EAAE,CAAE;QAACyD,WAAW,EAAC,KAAK;QAACnB,YAAY,EAAC,IAAI;QAACE,MAAM,EAAC,IAAI;QAAAjE,QAAA,gBACxD9B,OAAA,CAACpB,IAAI;UAACiI,UAAU,EAAC,MAAM;UAACW,EAAE,EAAE,CAAE;UAAA1F,QAAA,GAAC,gBACf,EAACR,aAAa,CAAC8F,IAAI;QAAA;UAAArF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACPlC,OAAA,CAACpB,IAAI;UAAAkD,QAAA,GAAC,WAAS,EAACR,aAAa,CAAC+F,QAAQ;QAAA;UAAAtF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9ClC,OAAA,CAACpB,IAAI;UAAAkD,QAAA,GAAC,UAAQ,EAACR,aAAa,CAACmG,MAAM,IAAI,KAAK;QAAA;UAAA1F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpDlC,OAAA,CAACf,QAAQ;UACPoH,WAAW,EAAC,4BAA4B;UACxChE,KAAK,EAAEb,WAAW,CAACF,aAAa,CAAC6D,QAAQ,CAAC,IAAI,EAAG;UACjDoC,QAAQ,EAAGxC,KAAK,IACdQ,qBAAqB,CAACR,KAAK,EAAEzD,aAAa,CAAC6D,QAAQ,CACpD;UACDuC,EAAE,EAAE;QAAE;UAAA3F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,EACDZ,aAAa,CAACqG,MAAM,IAAIrG,aAAa,CAACqG,MAAM,CAACL,MAAM,GAAG,CAAC,iBACtDtH,OAAA,CAAChB,KAAK;UACJ4I,GAAG,EAAEtG,aAAa,CAACqG,MAAM,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAE;UACtCC,GAAG,EAAExG,aAAa,CAAC8F,IAAK;UACxBvB,YAAY,EAAC,IAAI;UACjB6B,EAAE,EAAE;QAAE;UAAA3F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAETlC,OAAA,CAAC1B,GAAG;MAACyJ,IAAI,EAAC,GAAG;MAACpC,CAAC,EAAC,MAAM;MAACqC,QAAQ,EAAC,UAAU;MAAAlG,QAAA,eACxC9B,OAAA,CAACP,SAAS;QACRsE,MAAM,EAAEvD,SAAU;QAClByH,IAAI,EAAE,EAAG;QACTC,iBAAiB,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE;QACrDC,OAAO,EAAE;UACPC,iBAAiB,EAAE,KAAK;UACxBC,iBAAiB,EAAE,KAAK;UACxBC,cAAc,EAAE,IAAI;UACpBC,qBAAqB,EAAE;YACrBT,QAAQ,EAAEzF,MAAM,CAACC,MAAM,CAACC,IAAI,CAACiG,eAAe,CAACC;UAC/C,CAAC;UACDC,WAAW,EAAE,IAAI;UACjBC,kBAAkB,EAAE;YAClBb,QAAQ,EAAEzF,MAAM,CAACC,MAAM,CAACC,IAAI,CAACiG,eAAe,CAACC;UAC/C;QACF,CAAE;QACFG,MAAM,EAAGC,WAAW,IAAKxI,MAAM,CAACwI,WAAW,CAAE;QAAAjH,QAAA,GAE5CpB,kBAAkB,iBACjBV,OAAA,CAACJ,kBAAkB;UAACoJ,UAAU,EAAEtI;QAAmB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACtD,EACAlB,MAAM,CAACV,GAAG,CAAC,CAAC4E,KAAK,EAAE6B,KAAK,kBACvB/G,OAAA,CAACN,MAAM;UAELsI,QAAQ,EAAE9C,KAAK,CAACI,QAAQ,CAACpB,QAAS;UAClCsC,OAAO,EAAEA,CAAA,KAAMjF,gBAAgB,CAAC2D,KAAK,CAAE;UAAApD,QAAA,EAEtCR,aAAa,IAAIA,aAAa,CAAC6D,QAAQ,KAAKD,KAAK,CAACC,QAAQ,iBACzDnF,OAAA,CAACL,UAAU;YACTqI,QAAQ,EAAE9C,KAAK,CAACI,QAAQ,CAACpB,QAAS;YAClC+E,YAAY,EAAEA,CAAA,KAAM1H,gBAAgB,CAAC,IAAI,CAAE;YAAAO,QAAA,eAE3C9B,OAAA,CAAC1B,GAAG;cAAAwD,QAAA,gBACF9B,OAAA,CAACpB,IAAI;gBAACiI,UAAU,EAAC,MAAM;gBAAA/E,QAAA,EAAEoD,KAAK,CAACkC;cAAI;gBAAArF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC3ClC,OAAA,CAACpB,IAAI;gBAAAkD,QAAA,EAAEoD,KAAK,CAACmC;cAAQ;gBAAAtF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QACb,GAdI6E,KAAK;UAAAhF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeJ,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAC/B,EAAA,CAnTIF,aAAa;EAAA,QACIT,cAAc;AAAA;AAAA0J,EAAA,GAD/BjJ,aAAa;AAqTnB,eAAeA,aAAa;AAAC,IAAAiJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}