{"ast":null,"code":"var _jsxFileName = \"C:\\\\Masai\\\\Travel Project\\\\myAddition\\\\src\\\\NearbyPlaces.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, VStack, HStack, Text, Image, Spinner, Alert, AlertIcon } from \"@chakra-ui/react\";\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearbyPlaces = ({\n  latitude,\n  longitude\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (latitude && longitude) {\n      fetchNearbyPlaces();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [latitude, longitude]);\n  const fetchNearbyPlaces = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`/api/nearby-places?lat=${latitude}&lng=${longitude}`);\n      const data = await response.json();\n      if (response.ok) {\n        setPlaces(data.results);\n      } else {\n        throw new Error(data.error_message || \"Failed to fetch nearby places.\");\n      }\n    } catch (error) {\n      setError(`An error occurred: ${error.message}`);\n      console.error(\"Fetch Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"error\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 3,\n    align: \"stretch\",\n    mt: 4,\n    children: _s(places.map(_s(place => {\n      _s();\n      const [imageError, setImageError] = useState(false);\n      return /*#__PURE__*/_jsxDEV(Box, {\n        p: 3,\n        shadow: \"xs\",\n        borderWidth: \"1px\",\n        borderRadius: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n            color: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: place.vicinity || \"Address not available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Rating: \", place.rating || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), place.photos && place.photos.length > 0 && !imageError && /*#__PURE__*/_jsxDEV(Image, {\n          src: `https://maps.googleapis.com/maps/api/place/photo?maxwidth=300&photoreference=${place.photos[0].photo_reference}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`,\n          alt: place.name,\n          borderRadius: \"md\",\n          mt: 2,\n          onError: () => setImageError(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), imageError && /*#__PURE__*/_jsxDEV(Text, {\n          mt: 2,\n          children: \"No photo available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 28\n        }, this)]\n      }, place.place_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    }, \"gLR0P7wgc8ZXiun/rQPANvAzwwQ=\")), \"gLR0P7wgc8ZXiun/rQPANvAzwwQ=\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(NearbyPlaces, \"LbhWVoaw5j/Ac4xABdSlaZ1yJ2A=\");\n_c = NearbyPlaces;\nexport default NearbyPlaces;\nvar _c;\n$RefreshReg$(_c, \"NearbyPlaces\");","map":{"version":3,"names":["React","useEffect","useState","Box","VStack","HStack","Text","Image","Spinner","Alert","AlertIcon","FaMapMarkerAlt","jsxDEV","_jsxDEV","NearbyPlaces","latitude","longitude","_s2","_s","$RefreshSig$","places","setPlaces","loading","setLoading","error","setError","fetchNearbyPlaces","response","fetch","data","json","ok","results","Error","error_message","message","console","textAlign","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","status","spacing","align","map","place","imageError","setImageError","p","shadow","borderWidth","borderRadius","color","fontWeight","name","vicinity","rating","photos","length","src","photo_reference","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","alt","onError","place_id","_c","$RefreshReg$"],"sources":["C:/Masai/Travel Project/myAddition/src/NearbyPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Image,\r\n  Spinner,\r\n  Alert,\r\n  AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\r\n\r\nconst NearbyPlaces = ({ latitude, longitude }) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (latitude && longitude) {\r\n      fetchNearbyPlaces();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [latitude, longitude]);\r\n\r\n  const fetchNearbyPlaces = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `/api/nearby-places?lat=${latitude}&lng=${longitude}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setPlaces(data.results);\r\n      } else {\r\n        throw new Error(data.error_message || \"Failed to fetch nearby places.\");\r\n      }\r\n    } catch (error) {\r\n      setError(`An error occurred: ${error.message}`);\r\n      console.error(\"Fetch Error:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box textAlign=\"center\" mt={4}>\r\n        <Spinner />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert status=\"error\" mt={4}>\r\n        <AlertIcon />\r\n        {error}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <VStack spacing={3} align=\"stretch\" mt={4}>\r\n      {places.map((place) => {\r\n        const [imageError, setImageError] = useState(false);\r\n\r\n        return (\r\n          <Box\r\n            key={place.place_id}\r\n            p={3}\r\n            shadow=\"xs\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"md\"\r\n          >\r\n            <HStack>\r\n              <FaMapMarkerAlt color=\"red\" />\r\n              <Text fontWeight=\"bold\">{place.name}</Text>\r\n            </HStack>\r\n            <Text>{place.vicinity || \"Address not available\"}</Text>\r\n            <Text>Rating: {place.rating || \"N/A\"}</Text>\r\n            {place.photos && place.photos.length > 0 && !imageError && (\r\n              <Image\r\n                src={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=300&photoreference=${place.photos[0].photo_reference}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\r\n                alt={place.name}\r\n                borderRadius=\"md\"\r\n                mt={2}\r\n                onError={() => setImageError(true)}\r\n              />\r\n            )}\r\n            {imageError && <Text mt={2}>No photo available</Text>}\r\n          </Box>\r\n        );\r\n      })}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NearbyPlaces;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}