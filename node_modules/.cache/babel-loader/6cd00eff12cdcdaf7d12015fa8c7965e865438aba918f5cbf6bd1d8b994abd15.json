{"ast":null,"code":"var _jsxFileName = \"C:\\\\Masai\\\\Travel Project\\\\Map Api\\\\google-maps-directions-tutorial-master\\\\google-maps-directions-tutorial-master\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Box, Button, VStack, HStack, Input, IconButton, Text } from \"@chakra-ui/react\";\nimport { FaTimes, FaMapMarkerAlt } from \"react-icons/fa\";\nimport { useJsApiLoader, GoogleMap, Marker, Autocomplete, DirectionsRenderer } from \"@react-google-maps/api\";\nimport { useHistory } from \"react-router-dom\"; // For handling routing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 48.8584,\n  lng: 2.2945\n}; // Default center: Eiffel Tower\n\nfunction App() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: [\"places\"]\n  });\n  const [map, setMap] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [places, setPlaces] = useState([]);\n  const [placeDetails, setPlaceDetails] = useState(null); // Store place details\n\n  const originRef = useRef();\n  const destinationRef = useRef();\n  const [travelMode, setTravelMode] = useState(\"DRIVING\");\n  const history = useHistory(); // To handle navigation to detail page\n\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(Text, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  async function calculateRoute() {\n    if (!originRef.current.value || !destinationRef.current.value) {\n      alert(\"Please enter both origin and destination.\");\n      return;\n    }\n    try {\n      const directionsService = new window.google.maps.DirectionsService();\n      const results = await directionsService.route({\n        origin: originRef.current.value,\n        destination: destinationRef.current.value,\n        travelMode: window.google.maps.TravelMode[travelMode]\n      });\n      setDirectionsResponse(results);\n      setDistance(results.routes[0].legs[0].distance.text);\n      setDuration(results.routes[0].legs[0].duration.text);\n    } catch (error) {\n      alert(\"Error calculating route: \" + error.message);\n    }\n  }\n  function clearRoute() {\n    setDirectionsResponse(null);\n    setDistance(\"\");\n    setDuration(\"\");\n    originRef.current.value = \"\";\n    destinationRef.current.value = \"\";\n  }\n  async function findNearbyPlaces() {\n    if (!map) {\n      alert(\"Map is not initialized.\");\n      return;\n    }\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location: map.getCenter(),\n      radius: 2000,\n      type: [\"restaurant\", \"cafe\", \"tourist_attraction\"]\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n        setPlaces(results.slice(0, 5)); // Limit to top 5 results\n      } else {\n        alert(\"No nearby places found\");\n      }\n    });\n  }\n  const handlePlaceClick = place => {\n    setPlaceDetails(place);\n    history.push(\"/place-details\", {\n      placeDetails: place\n    }); // Navigate to details page\n  };\n  return /*#__PURE__*/_jsxDEV(HStack, {\n    spacing: 4,\n    align: \"start\",\n    h: \"100vh\",\n    w: \"100vw\",\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      p: 4,\n      borderRadius: \"lg\",\n      bg: \"white\",\n      shadow: \"md\",\n      spacing: 4,\n      w: \"sm\",\n      align: \"stretch\",\n      maxH: \"fit-content\",\n      position: \"absolute\",\n      left: 4,\n      top: 4,\n      zIndex: 1,\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Origin\",\n            ref: originRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Destination\",\n            ref: destinationRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          onClick: calculateRoute,\n          children: \"Find Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          icon: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this),\n          onClick: clearRoute\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTravelMode(\"DRIVING\"),\n          children: \"Car\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTravelMode(\"WALKING\"),\n          children: \"Walk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTravelMode(\"BICYCLING\"),\n          children: \"Bike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTravelMode(\"TRANSIT\"),\n          children: \"Transit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Distance: \", distance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Duration: \", duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        onClick: findNearbyPlaces,\n        children: \"Find Best Places Nearby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 3,\n        align: \"stretch\",\n        children: places.map((place, index) => /*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          shadow: \"xs\",\n          borderWidth: \"1px\",\n          borderRadius: \"md\",\n          cursor: \"pointer\",\n          onClick: () => handlePlaceClick(place) // Handle click for detailed view\n          ,\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n              color: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"bold\",\n              children: place.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: place.vicinity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), place.photos && place.photos.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: place.photos[0].getUrl({\n              maxWidth: 100,\n              maxHeight: 100\n            }),\n            alt: place.name,\n            style: {\n              width: 100,\n              height: 100,\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"2\",\n      h: \"100%\",\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: center,\n        zoom: 15,\n        mapContainerStyle: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        options: {\n          streetViewControl: false,\n          fullscreenControl: false\n        },\n        onLoad: map => setMap(map),\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: center\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LmJlGY92CtMhkLmalEO8+QuZ/D4=\", false, function () {\n  return [useJsApiLoader, useHistory];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Box","Button","VStack","HStack","Input","IconButton","Text","FaTimes","FaMapMarkerAlt","useJsApiLoader","GoogleMap","Marker","Autocomplete","DirectionsRenderer","useHistory","jsxDEV","_jsxDEV","center","lat","lng","App","_s","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","map","setMap","directionsResponse","setDirectionsResponse","distance","setDistance","duration","setDuration","places","setPlaces","placeDetails","setPlaceDetails","originRef","destinationRef","travelMode","setTravelMode","history","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateRoute","current","value","alert","directionsService","window","google","maps","DirectionsService","results","route","origin","destination","TravelMode","routes","legs","text","error","message","clearRoute","findNearbyPlaces","service","PlacesService","request","location","getCenter","radius","type","nearbySearch","status","PlacesServiceStatus","OK","slice","handlePlaceClick","place","push","spacing","align","h","w","p","borderRadius","bg","shadow","maxH","position","left","top","zIndex","placeholder","ref","colorScheme","onClick","icon","index","borderWidth","cursor","color","fontWeight","name","vicinity","photos","length","src","getUrl","maxWidth","maxHeight","alt","style","width","height","objectFit","flex","zoom","mapContainerStyle","options","streetViewControl","fullscreenControl","onLoad","directions","_c","$RefreshReg$"],"sources":["C:/Masai/Travel Project/Map Api/google-maps-directions-tutorial-master/google-maps-directions-tutorial-master/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  Button,\n  VStack,\n  HStack,\n  Input,\n  IconButton,\n  Text,\n} from \"@chakra-ui/react\";\nimport { FaTimes, FaMapMarkerAlt } from \"react-icons/fa\";\nimport {\n  useJsApiLoader,\n  GoogleMap,\n  Marker,\n  Autocomplete,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\nimport { useHistory } from \"react-router-dom\"; // For handling routing\n\nconst center = { lat: 48.8584, lng: 2.2945 }; // Default center: Eiffel Tower\n\nfunction App() {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: [\"places\"],\n  });\n\n  const [map, setMap] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [places, setPlaces] = useState([]);\n  const [placeDetails, setPlaceDetails] = useState(null); // Store place details\n\n  const originRef = useRef();\n  const destinationRef = useRef();\n  const [travelMode, setTravelMode] = useState(\"DRIVING\");\n\n  const history = useHistory(); // To handle navigation to detail page\n\n  if (!isLoaded) return <Text>Loading...</Text>;\n\n  async function calculateRoute() {\n    if (!originRef.current.value || !destinationRef.current.value) {\n      alert(\"Please enter both origin and destination.\");\n      return;\n    }\n    try {\n      const directionsService = new window.google.maps.DirectionsService();\n      const results = await directionsService.route({\n        origin: originRef.current.value,\n        destination: destinationRef.current.value,\n        travelMode: window.google.maps.TravelMode[travelMode],\n      });\n      setDirectionsResponse(results);\n      setDistance(results.routes[0].legs[0].distance.text);\n      setDuration(results.routes[0].legs[0].duration.text);\n    } catch (error) {\n      alert(\"Error calculating route: \" + error.message);\n    }\n  }\n\n  function clearRoute() {\n    setDirectionsResponse(null);\n    setDistance(\"\");\n    setDuration(\"\");\n    originRef.current.value = \"\";\n    destinationRef.current.value = \"\";\n  }\n\n  async function findNearbyPlaces() {\n    if (!map) {\n      alert(\"Map is not initialized.\");\n      return;\n    }\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location: map.getCenter(),\n      radius: 2000,\n      type: [\"restaurant\", \"cafe\", \"tourist_attraction\"],\n    };\n\n    service.nearbySearch(request, (results, status) => {\n      if (\n        status === window.google.maps.places.PlacesServiceStatus.OK &&\n        results\n      ) {\n        setPlaces(results.slice(0, 5)); // Limit to top 5 results\n      } else {\n        alert(\"No nearby places found\");\n      }\n    });\n  }\n\n  const handlePlaceClick = (place) => {\n    setPlaceDetails(place);\n    history.push(\"/place-details\", { placeDetails: place }); // Navigate to details page\n  };\n\n  return (\n    <HStack spacing={4} align=\"start\" h=\"100vh\" w=\"100vw\">\n      {/* Control Panel */}\n      <VStack\n        p={4}\n        borderRadius=\"lg\"\n        bg=\"white\"\n        shadow=\"md\"\n        spacing={4}\n        w=\"sm\"\n        align=\"stretch\"\n        maxH=\"fit-content\"\n        position=\"absolute\"\n        left={4}\n        top={4}\n        zIndex={1}\n      >\n        <HStack>\n          <Autocomplete>\n            <Input placeholder=\"Origin\" ref={originRef} />\n          </Autocomplete>\n          <Autocomplete>\n            <Input placeholder=\"Destination\" ref={destinationRef} />\n          </Autocomplete>\n        </HStack>\n        <HStack>\n          <Button colorScheme=\"blue\" onClick={calculateRoute}>\n            Find Route\n          </Button>\n          <IconButton icon={<FaTimes />} onClick={clearRoute} />\n        </HStack>\n        <HStack>\n          <Button onClick={() => setTravelMode(\"DRIVING\")}>Car</Button>\n          <Button onClick={() => setTravelMode(\"WALKING\")}>Walk</Button>\n          <Button onClick={() => setTravelMode(\"BICYCLING\")}>Bike</Button>\n          <Button onClick={() => setTravelMode(\"TRANSIT\")}>Transit</Button>\n        </HStack>\n        <Text>Distance: {distance}</Text>\n        <Text>Duration: {duration}</Text>\n        <Button colorScheme=\"green\" onClick={findNearbyPlaces}>\n          Find Best Places Nearby\n        </Button>\n\n        {/* Nearby Places List */}\n        <VStack spacing={3} align=\"stretch\">\n          {places.map((place, index) => (\n            <Box\n              key={index}\n              p={2}\n              shadow=\"xs\"\n              borderWidth=\"1px\"\n              borderRadius=\"md\"\n              cursor=\"pointer\"\n              onClick={() => handlePlaceClick(place)} // Handle click for detailed view\n            >\n              <HStack>\n                <FaMapMarkerAlt color=\"red\" />\n                <Text fontWeight=\"bold\">{place.name}</Text>\n              </HStack>\n              <Text>{place.vicinity}</Text>\n              {place.photos && place.photos.length > 0 && (\n                <img\n                  src={place.photos[0].getUrl({\n                    maxWidth: 100,\n                    maxHeight: 100,\n                  })}\n                  alt={place.name}\n                  style={{ width: 100, height: 100, objectFit: \"cover\" }}\n                />\n              )}\n            </Box>\n          ))}\n        </VStack>\n      </VStack>\n\n      {/* Google Map */}\n      <Box flex=\"2\" h=\"100%\" position=\"relative\">\n        <GoogleMap\n          center={center}\n          zoom={15}\n          mapContainerStyle={{ width: \"100%\", height: \"100%\" }}\n          options={{ streetViewControl: false, fullscreenControl: false }}\n          onLoad={(map) => setMap(map)}\n        >\n          <Marker position={center} />\n          {directionsResponse && (\n            <DirectionsRenderer directions={directionsResponse} />\n          )}\n        </GoogleMap>\n      </Box>\n    </HStack>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}