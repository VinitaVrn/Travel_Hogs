{"ast":null,"code":"var _jsxFileName = \"C:\\\\Masai\\\\Travel Project\\\\myAddition\\\\src\\\\NearbyPlaces.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, VStack, HStack, Text, Image, Spinner, Alert, AlertIcon } from \"@chakra-ui/react\";\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearbyPlaces = ({\n  latitude,\n  longitude\n}) => {\n  _s();\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [imageError, setImageError] = useState(false);\n  const API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  useEffect(() => {\n    if (latitude && longitude) {\n      fetchNearbyPlaces();\n    }\n  }, [latitude, longitude]);\n  const fetchNearbyPlaces = async () => {\n    setLoading(true);\n    setError(null);\n    if (!API_KEY) {\n      setError(\"Google Maps API key is missing. Check your .env file.\");\n      setLoading(false);\n      return;\n    }\n    const url = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${latitude},${longitude}&radius=5000&type=restaurant&key=${API_KEY}`;\n    console.log(\"Fetching places from:\", url);\n    try {\n      const response = await fetch(url);\n      const text = await response.text();\n      try {\n        const data = JSON.parse(text);\n        if (data.status === \"OK\") {\n          setPlaces(data.results);\n        } else {\n          throw new Error(data.error_message || \"Failed to fetch nearby places.\");\n        }\n      } catch (jsonError) {\n        throw new Error(\"Received non-JSON response. Check API key & billing.\");\n      }\n    } catch (error) {\n      setError(`An error occurred: ${error.message}`);\n      console.error(\"Fetch Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"error\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 3,\n    align: \"stretch\",\n    mt: 4,\n    children: places.map(place => /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      shadow: \"xs\",\n      borderWidth: \"1px\",\n      borderRadius: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: place.vicinity || \"Address not available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Rating: \", place.rating || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), place.photos && place.photos.length > 0 && !imageError && /*#__PURE__*/_jsxDEV(Image, {\n        src: `https://maps.googleapis.com/maps/api/place/photo?maxwidth=300&photoreference=${place.photos[0].photo_reference}&key=${API_KEY}`,\n        alt: place.name,\n        borderRadius: \"md\",\n        mt: 2,\n        onError: () => setImageError(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), imageError && /*#__PURE__*/_jsxDEV(Text, {\n        mt: 2,\n        children: \"No photo available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 26\n      }, this)]\n    }, place.place_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(NearbyPlaces, \"mHfHXtaJklu910CVrqQVOp9d5ro=\");\n_c = NearbyPlaces;\nexport default NearbyPlaces;\nvar _c;\n$RefreshReg$(_c, \"NearbyPlaces\");","map":{"version":3,"names":["React","useEffect","useState","Box","VStack","HStack","Text","Image","Spinner","Alert","AlertIcon","FaMapMarkerAlt","jsxDEV","_jsxDEV","NearbyPlaces","latitude","longitude","_s","places","setPlaces","loading","setLoading","error","setError","imageError","setImageError","API_KEY","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","fetchNearbyPlaces","url","console","log","response","fetch","text","data","JSON","parse","status","results","Error","error_message","jsonError","message","textAlign","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","spacing","align","map","place","p","shadow","borderWidth","borderRadius","color","fontWeight","name","vicinity","rating","photos","length","src","photo_reference","alt","onError","place_id","_c","$RefreshReg$"],"sources":["C:/Masai/Travel Project/myAddition/src/NearbyPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Image,\r\n  Spinner,\r\n  Alert,\r\n  AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\r\n\r\nconst NearbyPlaces = ({ latitude, longitude }) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  const API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n\r\n  useEffect(() => {\r\n    if (latitude && longitude) {\r\n      fetchNearbyPlaces();\r\n    }\r\n  }, [latitude, longitude]);\r\n\r\n  const fetchNearbyPlaces = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (!API_KEY) {\r\n      setError(\"Google Maps API key is missing. Check your .env file.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const url = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${latitude},${longitude}&radius=5000&type=restaurant&key=${API_KEY}`;\r\n    console.log(\"Fetching places from:\", url);\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const text = await response.text();\r\n\r\n      try {\r\n        const data = JSON.parse(text);\r\n        if (data.status === \"OK\") {\r\n          setPlaces(data.results);\r\n        } else {\r\n          throw new Error(\r\n            data.error_message || \"Failed to fetch nearby places.\"\r\n          );\r\n        }\r\n      } catch (jsonError) {\r\n        throw new Error(\"Received non-JSON response. Check API key & billing.\");\r\n      }\r\n    } catch (error) {\r\n      setError(`An error occurred: ${error.message}`);\r\n      console.error(\"Fetch Error:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box textAlign=\"center\" mt={4}>\r\n        <Spinner />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert status=\"error\" mt={4}>\r\n        <AlertIcon />\r\n        {error}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <VStack spacing={3} align=\"stretch\" mt={4}>\r\n      {places.map((place) => (\r\n        <Box\r\n          key={place.place_id}\r\n          p={3}\r\n          shadow=\"xs\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"md\"\r\n        >\r\n          <HStack>\r\n            <FaMapMarkerAlt color=\"red\" />\r\n            <Text fontWeight=\"bold\">{place.name}</Text>\r\n          </HStack>\r\n          <Text>{place.vicinity || \"Address not available\"}</Text>\r\n          <Text>Rating: {place.rating || \"N/A\"}</Text>\r\n          {place.photos && place.photos.length > 0 && !imageError && (\r\n            <Image\r\n              src={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=300&photoreference=${place.photos[0].photo_reference}&key=${API_KEY}`}\r\n              alt={place.name}\r\n              borderRadius=\"md\"\r\n              mt={2}\r\n              onError={() => setImageError(true)}\r\n            />\r\n          )}\r\n          {imageError && <Text mt={2}>No photo available</Text>}\r\n        </Box>\r\n      ))}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default NearbyPlaces;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}